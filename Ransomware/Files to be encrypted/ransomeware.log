Vm0wd2VFNUdWWGhUV0doWVltdHdUMVp0TVZOV1ZsbDNXa2M1VjAxWGVGbGFWV2hyWVd4YWMxWnFUbGhoTVVwVVdWZDRTMk14VG5OaVJuQk9VakpvVFZkV1VrSmxSbGw0VTI1R1YySlZXbFJXYWtaTFUxWmtWMXBFVWxSaVZrWTFWa2QwWVdGV1NuUlZia0pXWVd0YVRGcFdXbUZqTVdSMFVteFNUbUY2VmxwV1ZFb3dZekZzVjFOdVZsSmlhMHBoV1d0a2IxVkdVbkpYYlVaWFRWWmFlVnBGV21GVWJGbDRVMnRzVjAxdVVuWldWRVpUWXpGa1dWcEdhR2xTTTJoWVYxZDBhMkl4U2tkalJtaHNVbTVDYzFacVJrdFRWbFowWlVaT1ZXSlZWalpWVjNSelYwWlplbFZ0YUZwaGExcG9Xa1ZhVDJNeVNraGhSbEpUVm01Q2IxWnRNSGhPUm14WFZXdGtWbUpIVWxsWmJHaFRWMFpTVjFwRVFrOWlSM2hYVjJ0b1QxWnJNWEpXYWs1YVRVWndhRlpxUVhoa1ZsWjFVMnhXVjFadVFqWldiWEJIWVRGa1YyTkZXbEJXYlZKVVdXdG9RMlJzV25STlNHUnNVakJzTkZVeWRHdFdiVXBIWTBac1dtSlVSbFJXTVZwaFpFZE9ObEpzYUdsU2JrRjNWa1phYjJFeFdYaFRia3BwVWtad1dGWnFUa05UUmxweFVtMUdXRkpzV2pGWk1GcGhWakZLV1ZGcmVGaGlSbHB5VlhwR1NtVldUbkphUm1ScFVqRktVRmRYZEZka01rbDRWMWhvWVZKR1NtRldiVEUwVjFaYVIyRkhPV2hXYXpWSVZUSTFRMVp0U2tkV1dHaGFUVVp3V0ZreFdrZGtWbkJHVGxaT2FWTkZTa3RXYTJRMFlqRlJlVkpzWkZSaWJFcFhXVlJLVTFZeFVsZGFSemxxWWtac00xZHJWakJXUmtwelYyNXdWMUl6YUhKV1ZFRjNaVVpPYzFKc2FGZFNWM2N3Vmxod1IxTXlUbkpQVm1SaFVteGFjRlpxU205bGJHUllaVWQwVlUxRVZsaFdNV2h2Vm0xRmVsRnVTbFZXVmtwWVZqRmFZVmRGTlZkVWJHUnBWbFpaTUZacVNURlNNVnAwVTJ0b1ZtSkdTbUZaVjNSaFlVWnJlRmRzVG10U1ZHeFpXVEJWTVZZeFdrZFhiR3hYWWxob2NscEVSbFpsUjBwSFlVWlNhVkp1UWxwWFYzUnJUa1phYzFWc1dtRlNlbXhaVlcxNGQxZFdVbGRXYWtKb1lYcEdXVlpYY0VkV01WbDZZVWhhV2xac2NHaFZiWGhyWXpKS1IyRkhiRk5pYTBwMlZqSjBVMUl5UlhoVFdHaFlZbXhhVmxscldtRmpSbHB6VjI1a1dGWnNjRWhXYlRGSFlUQXhjMWRzYUZkTlYyaDZXV3RhUzA1dFNrZFdiSEJvVFdzd2VGWkhlR0ZXYlZaV1RsWmtWV0pHY0U5WlZFNURUbXhhVlZOWWFHbE5WbXcxVld4b2IxWkhSWGhUYldoV1lsaG9NMVpxUm5kV2JHUjFVMjE0YVZaV2NFcFhWbFpoVkRKR1YxZHJhR3BOTW1oWVdXeFNRMDB4Y0ZaWGJrNVhUVmhDU2xVeWN6RldSa2w0VTI1b1YxWkZTbGRVVmxwclZqRmtkVlZyTlZkbGJYaFpWbGN3ZUU1SFZsZFhXR3hQVmpOU1YxUlZVa2RTYkd4eVYyMUdWMDFWYnpKVmJUVmhWakF4UjJORmVGcE5ha1pRVld4YVQyTXhjRVpPVms1b1RUQktUMVp0ZUd0a01VbDVWVmhzVm1FeVVsWlpiWE14WWpGV2RHUkZkRmhTYkVwWlZHeGpOV0V5U2tkalJFSmFUVVpWTVZsV1ZYaGphekZWVld4b2FFMVdjRmxXYlhoclVtMVJkMDVXYkZKaVJscFlWRlJHUzA1c1draGxSMFpXVFdzeE5Ga3dWbGRXYlVwSFYyeG9WVlpYYUVSVWJGcGhWbFpPZFZwR1RrNVdNVXBLVmxSSk1WVXlTa2RVYTFwWVlrWmFhRlpxVGxOVVJuQllaVVphYTAxWVFrZFhhMXBUVlRBeFIyTkZjRmhXUlVweVZHdGFXbVZHWkhOaVJrcG9ZWHBXV1ZkV1pEQmthekZIWWtaV1UySklRbk5XYlhoaFpXeFplVTFZVGxaTlZtdzFXVlZhYzFkR1dqWlNWRUpZVm14d2VsWnFSbGRqTVZwelUyMXNhVk5GU2xGV2JUQjNaVVV4UmsxSWFHbFNiSEJaV1Zod2MySXhXblJrU0dST1ZteGFXVnBGVlRWV01WcHpZMFpvVjAxWGFISldha3BHWlVkT1NHRkdaR2xTYmtKdlYxUkplRkl4U1hoalJXUldZa1pLVkZac1pETk5iRnB4VTJwU1dsWXdWalJXUnpWVFZqSktSMk5HUmxkaVdHaG9WbFJHYzJOc1duSmtSMnhPVm10d1dWZFdWbGRVTVZKeVRWWm9WbUpIZUdoVmJHUlNaREZhY1ZOcmRGUlNWR3hXVmxkNFlWWXdNSGhUYm14WFlrWmFhRmxVUmt0ak1WSjFWbXhLYVZaV2NGbFhWM1JYWkRGa1YxZHNhR3RTTUZweVZGWldjMDVHYTNkV2JUbFdUV3R3V1ZwVldtOVhiVXBaVld0NFdGWnNjR2hXYkZwUFYxZEdSazlXVG1sWFIyaGFWbXhTU2sxV1RYbFNiazVWWVRGd1VGWnRNVFJYUm14elZXdGtWMUpzY0hsV01qVlBZVzFLU1ZGclpGVk5WMUl6VmxSS1JtVkhTWHBoUm1ScFZrVlZkMWRyVWtkWGJWWlhWMjVXVkdKSGFIQlpiWFJMVjFaYWRHVkhSbXROVmxwSVdXdGFWMVpIU2taT1dFcFdZbGhOZUZSV1dtRlhSMVpJWkVab1UyRXpRalpYVkVKdll6RlplRmRyV2xSaWEzQmhXV3hTUjFVeGNGWlhiRTVyVm14d01GbHJaRFJoUlRGSlVXNWFWMkV4Y0hKVVZWcHpWakZTYzFwR1pHbGlSWEJSVm1wQ2ExVXhXbGRpU0VwWFltczFUMVJXWkRCTk1XeFdWbFJXV0ZKcmJETlpNRlp6VmpGS2RHRklTbGROUjFKSVdUSjRhMk5XVW5OYVJUVlRZa1paTUZadGNFTmhNVkY0Vkd0b1ZXRXlhSEJWYWtvMFYxWldjVk5zU2s1aVJuQjRWVEp3UTFZd01YSldhbEpYVFZkb2VsWlVSbXRUUmxaeldrWndhRTFXYjNwWFZFSmhaREZrU0ZScldtRlNiRXBQVm0wMVExTnNaSEpXYlhSVFRWWndlbFV5ZUZkaFZrcEdWMnhrVlZZelFsaFpWVnB6VmpGYVdWcEhlRk5oTTBKWFZsUktORmxYUmxkWGExcFlZV3h3V1ZZd2FFTlRSbkJGVW0xR1UwMVZjSHBXYlRGdlZUSktXV0ZHUWxoV00yaDJXVzB4VjFZeFpISlhiVVpUVWxWd1ZsWkdWbE5TTVdSSFlUTmthRkpyTlZsVmFrSjNWMnhzVm1GRlpGaGlWWEJJV1RCa2IxZHJNWFZoUjJoWFRVWldORlpxUm5kVFIwWkhWRzFzYUUxSVFreFdiVEIzWkRBeFdGUllhRlZpYXpWVldWZDRkMWRHYkhOVmJrNWFWbTE0ZVZkcldrOVdNREZYVW1wU1YySlVWbWhaYTFwTFkyczFXV0pHWkU1aWJXaE5WbTF3UjFsWFRuUlVhMlJTWWtkU1dGUlVTbTlWUmxwSFYyMTBWazFWYkRWV1IzUmhWbTFLU1ZGdVRsZE5SbkJNVmtWYVlWZEhUa1prUjJ4T1lUSjNNRmRXVWs5a01rWlhVMnhhVDFaNmJGaFpiRkpYVWtaWmVGZHRSbXRTVkZaWVYydGFVMkZXU2xoa2VrSlhZV3R3TTFWcVJtdFNNV1J5VjJzNVYxZEhhRmRYVjNSclZURldSMVpZYUZoaVIxSnlWV3BHWVZOV1ZuUmxSWFJYVFZWd1Yxa3dWVEZXTWtwSFUydG9WMkpZVGpSV2FrWlBWMWRHUjFkdGFHbFRSVW8wVm14U1EyRXdOVWhVYTJSV1lrZG9jVlV3Vm5kamJGSlhWMnRrVDFadVFrZFhhMVpyWVVkS1JtSkVUbHBOUmxwNlZtcEtTMU5HVm5WVGJHUlhZa2hDVFZkVVJtdFRNVTVYWTBWa2FsSXllSEJXTUZVd1RVWmFjMWRzVGxSTlZsWTBWMnRXYTFsV1RrZFRhemxYWVd0S2FGWXhXbGRqTWtaR1ZHMTRhVkp0ZHpGWGExWnJVakZhUmsxWVNtcFNWMmhoV1ZSR2QyUnNXblJOVlhSWVZqQmFTbFZ0ZUhkV01rcEhZMFV4VjFKc2NHaFpWRVphWlVkRmVtTkhhRk5OYm1oVlYxWlNRMlF4V25OWFdHeHJVbXMxVTFSWGRGZE5NVkpYWVVWa2FGSnJjRWRXTWpGdlZtMUtTRlZ1V21GU00yaFVWbTE0WVdSV2NFWlBWMmhzWWtad1MxWnFTakJoTWtsNFZsaGtUbFpYVW5CYVYzUjNWakZTVjFkdFJtcGlSbGt5VlRKME1GVXdNWEpPVldoYVZsWlZNVlpVUVhoak1VNTBUMVprYVZaR1dYcFdiWEJMVkRGWmVWSlljR2xTVkd4WlZXeFNWMlZXV2tkYVJGSlVUVlUxV0ZZeU5WTlViRnBHVTJ4U1YySllhR2hXTW5oWFYwZFNSVkZzWkU1V1YzY3lWbXhqZUdJeFdYaFhiR1JYVmtWYWFGVnRlSGRWUm5CSFYyMTBhMUl3Y0VkVWJGVXhWakZhYzFkVVJsZGlXR2h4V2tSS1YxTkdVbGxpUmxaWVVqSm9lRlpYTVRSVE1WVjRZa2hPVjJKdFVsWlZiWGhMVjFad1ZtRkhkR2hOUkVaWldsVm9jMWRIUlhoalIyaGFWa1ZhWVZwVldrOWpiVTVIWTBaa1YyRXpRa1pXYkdoM1VXMVdSMWRzWkZOaWJFcFFWbTAxUTFkR1duRlNhM1JVVm0xU2VsZHJVa05oYXpGV1RsVm9WMUo2VmxSWmExcEtaREZrYzJGSFJsZE5NbWhOVjJ0YVlWZHRWbGhXYTJocVVsUldXRlJWV25aa01WcHlXWHBHVjAxcldsaFdSM1J2Vm0xS2NtTkdaRnBXTTFKb1dWVmFjbVZYVmtaa1JrNU9WbGhCZUZZeWRHRlZNa1pYVTI1S2FsSkdXbGhaVjNSMlRVWldWVkpzWkZSU2F6VXhWVEl4ZDFVeFNsbFJiV2hZVm0xU05sUldXbFpsUmxaMVZXMTRVMWRHU25sV1YzQkRaREZPYzFkcmFFNVdWMUpZV1Zod1IxSXhhM2RoUlU1WFlYcEdNVlZYZERSWFJscDBWV3hDVmsxR2NGQlpNakZIVWpGd1IyRkdUbWxUUlVreFZtMTRVMUV5UlhsVGJsSldWMGRvVmxsdGRHRldSbGwzV2taT2FGSnNTbGxhUldSSFZrWmFjMWRxUWxWaVIyaHlWbXRrUzFKdFNrVlViSEJPVWpKb1VWWnFRbXRUTVU1SFZXeHNZVkp0YUc5WlZFWjJaV3hhY1ZGc1drNVdiVkpKVmtkMGIyRnNTWGxsU0VKWFRVZFNjbFJ0ZUZwbFYxSkhXa2RvVGxadGR6RldWM2h2WVRGYWRGTnJXbXBUUlVwb1ZtcE9RMUV4VVhoU1ZHeFJWVlF3T1E9PQ==